@namespace riwitalentfrontend.Layout

@inject AuthenticationStateProvider AutenticacionProvider
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<MudNavMenu Rounded="true" Color="Color.Primary" Bordered="true">
    <MudNavLink Href="/home" Match="NavLinkMatch.All" Icon="@Icons.Material.Rounded.Home">Dashboard</MudNavLink>
    <MudNavLink Href="/coders" Match="NavLinkMatch.All" Icon="@Icons.Material.Rounded.Code">Coders</MudNavLink>
    <MudNavLink href="/groups" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Groups">Grupos</MudNavLink>
    <!-- Llama a la función CerrarSesion cuando se hace clic -->
    <MudNavLink OnClick="Logout" Match="NavLinkMatch.All" Icon="@Icons.Material.Rounded.Logout">Cerrar Sesión</MudNavLink>
</MudNavMenu>

<!-- Muestra la alerta de error si hay un mensaje -->
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Class="my-2">
        @ErrorMessage
    </MudAlert>
}

@code
{
    public string ErrorMessage;
    private async Task Logout()
    {
     
        try
        {
            // Llamar a la función de Logout en AuthService
            await AuthService.Logout();

            // Redirigir a la página de inicio de sesión o cualquier otra ruta
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception ex)
        {
            ErrorMessage = "Hubo un error cerrando la sesión. Inténtalo nuevamente más tarde."; // Manejo de errores
            Console.WriteLine($"Error cerrando sesión: {ex.Message}");
        }
    }
}