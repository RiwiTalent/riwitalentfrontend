@page "/HomeClient/{groupId}"
@layout ClientLayout


<PageTitle>RiwiTalent: Software de gestión talento Riwi</PageTitle>


<MudMainContent />
<BannerCodersComponent />
<SelectedCodersComponent AddCodersToGroupAsync="AddCodersToGroupAsync" SelectedCoders="@_selectedCoders" OnCoderAdded="AddCoderHandler" />
<CardComponent SelectedCoders="@_selectedCoders" OnCoderAdded="AddCoderHandler" groupId="@groupId" FilterInGroup = "@FilterInGroup"/>



@code {
    [Parameter]
    public string? groupId { get; set; }

    [Parameter]
    public bool? FilterInGroup { get; set; } = true;

    private List<Coder> _selectedCoders = new List<Coder>();

        private void AddCoderHandler(Coder coder)
    {
        Console.WriteLine($"Coder agregado: {coder.FirstName} {coder.FirstLastName}");
       
    }

     private async Task AddCodersToGroupAsync()
    {
        if (string.IsNullOrEmpty(groupId) || _selectedCoders.Count == 0)
        {
            Console.WriteLine("Debes ingresar un ID de grupo y seleccionar coders.");
            return;
        }

        var coderIds = _selectedCoders.Select(c => c.Id).ToList();
        Console.WriteLine($"Enviando {coderIds.Count} coders al grupo {groupId}: {string.Join(", ", coderIds)}");

        var data = new
        {
            GroupId = groupId,
            CoderList = coderIds
        };

        try
        {
            Console.WriteLine("Llamada HTTP POST al backend");
            var response = await Http.PostAsJsonAsync("http://localhost:5113/coders/grouped", data);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Coders agregados correctamente al grupo.");
            }
            else
            {
                Console.WriteLine($"Error al agregar los coders: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ocurrió un error: {ex.Message}");
        }
    }

    

}