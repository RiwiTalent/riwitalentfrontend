@namespace riwitalentfrontend.Components
@using Blazored.SessionStorage
@using riwitalentfrontend.Models
@inject ISessionStorageService _sessionStorage

<MudAvatar Color="ColorRandom" 
           Style="@Style" 
           Elevation="2">
    @if (!string.IsNullOrEmpty(AvatarUrl))
    {
    <MudImage Src="@AvatarUrl" />
    }
    else if (!string.IsNullOrEmpty(Inicial))
    {
    @Inicial.ToUpper()
    }
    else
    {
        <MudIcon Color="Color.Inherit" 
                 Icon="@Icons.Material.Filled.AddPhotoAlternate" />
    }
</MudAvatar>
    @*
    <MudBadge Color="Color.Info" Overlap="true" Bordered="true" Class="mx-6 my-4">
    </MudBadge>
    *@
    

@code {
    private string? Inicial { get; set; }
    private Color ColorRandom { get; set; }
    
    [Parameter] public string? AvatarUrl { get; set; }
    [Parameter] public string? Email { get; set; }
    [Parameter] public string? FirstName { get; set; }
    [Parameter] public string? LastName { get; set; }
    [Parameter] public required string TypeAvatar { get; set; }
    [Parameter] public string? KeySesionStorage { get; set; } = "userEmail";
    [Parameter] public GroupCoders? GroupCoders { get; set; }
    [Parameter] public string? Style { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GenerarColorRandom();
        await ObtenerSesionStorageAvatar();
    }

    private async Task ObtenerSesionStorageAvatar()
    {
        if (TypeAvatar == "Usuario")
        {
            var email = await _sessionStorage.GetItemAsync<string>(KeySesionStorage);
            if (!string.IsNullOrEmpty(email))
            {
                Inicial = email.Length > 1 ? $"{email[0]}{email[1]}" : email[0].ToString();
            }
            else
            {
                Console.WriteLine("El usuario no se encontrÃ³ en el Session Storage.");
            }
        }
        else if (TypeAvatar == "Group" || TypeAvatar == "Coder")
        {
            if (!string.IsNullOrEmpty(FirstName))
            {
                if (string.IsNullOrEmpty(LastName))
                {
                    Inicial = FirstName.Length > 1 ? $"{FirstName[0]}{FirstName[1]}" : FirstName[0].ToString();
                }
                else
                {
                    Inicial = $"{FirstName[0]}{LastName[0]}";
                }
            }
        }
    }

    private void GenerarColorRandom()
    {
        List<Color> listColors = new List<Color>
        {
            Color.Success,
            Color.Primary,
            Color.Warning,
            Color.Error,
            Color.Info
        };

        Random numeroRandom = new Random();
        ColorRandom = listColors[numeroRandom.Next(listColors.Count)];
    }
}