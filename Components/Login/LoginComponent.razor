@namespace riwitalentfrontend.Components

@inject IAuthService AuthService;
@inject AuthenticationStateProvider AutenticacionProvider;
@inject ISessionStorageService SessionStorage
@using Blazored.SessionStorage
@inject NavigationManager NavigationManager;
@inject HttpClient HttpClient;
@inject SweetAlertService Swal;
@inject AlertService AlertService;

<MudGrid Class="pa-0 ma-0" Spacing="0" Style="height: 100vh;">
    <!-- Imagen en la parte superior en móviles -->
    <MudItem xs="12" sm="6" Class="pa-0 ma-0" Style="height: 50vh;" Hidden="smAndUp">
        <MudImage Src="images/login.png" Alt="Swedish Farm House" Class="rounded-lg" Style="width: 100%; height: 100%; object-fit: cover;" />
    </MudItem>

    <!-- Contenido de la tarjeta de login -->
    <MudItem xs="12" sm="6" Class="d-flex justify-center align-center pa-2" Style="height: 100%;">
        <MudContainer Class="d-flex justify-center align-center pa-2 flex-grow-1">
            <MudCard Class="pa-6 d-flex justify-center align-center" Style="width: 50%;">
                <MudCardHeader>
                    <MudItem Class="d-flex justify-center align-center">
                        <LogoComponent IsDarkMode="@IsDarkMode" />
                    </MudItem>
                </MudCardHeader>
                <MudItem>
                    <MudText Align="Align.Center" Typo="Typo.h5"><b>¡Bienvenido/a de nuevo!</b></MudText>
                    <MudText Align="Align.Center" Typo="Typo.subtitle1">Ingresa con tu cuenta para continuar</MudText>
                </MudItem>
                <MudCardContent Class="FullWidth" Style="width: 100%;">
                    <MudForm Spacing="2">
                        <MudTextField T="string" Label="Correo" @bind-value="_email" Variant="Variant.Outlined" InputType="InputType.Email"/>
                        <MudTextField T="string" Label="Contraseña" @bind-Value="_password" Variant="Variant.Outlined" InputType="@_passwordInput" IconSize="Size.Small" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Ver Contraseña"/>
                    </MudForm>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="Login" Class="rounded">Continuar</MudButton>
                </MudCardActions>
            </MudCard>
        </MudContainer>
    </MudItem>

    <!-- Imagen para pantallas más grandes -->
    <MudItem xs="12" sm="6" Class="pa-0 ma-0" Style="height: 100%;">
        <MudImage Src="images/login.png" Alt="Swedish Farm House" Class="rounded-lg" Style="width: 100%; height: 100%; object-fit: cover;" />
    </MudItem>
</MudGrid>


@code {
    private string? _email;
    private string? _password;
    private bool IsDarkMode { get; set; }

    bool _isShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonTestclick()
    {
        @if (_isShow)
        {
            _isShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else {
            _isShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }
    
    private async Task Login()
    {
        var succes = await AuthService.Login(_email, _password);
        
        if (succes)
        {
            // Guardar el correo en SessionStorage
            await SessionStorage.SetItemAsync("userEmail", _email);

            NavigationManager.NavigateTo("/coders");
            await Swal.FireAsync(new SweetAlertOptions
            {   
                Title = "¡Bienvenido",
                Position = "center",
                Icon = SweetAlertIcon.Success,
                ShowConfirmButton = false ,
                Timer = 1500
            });
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Correo o contraseña incorrectos!",
                Text = "",
                Icon = SweetAlertIcon.Warning,
                ConfirmButtonText = "Intenta de nuevo",
                Timer = 1500
            });
        }
    }
}